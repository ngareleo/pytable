A doc on the future plans
 ---- Done -----
pre 1: Allow users to draw tables from lists

 ---- Todo -----
fe 1: Allow the table to be configurable
fe 2: Support ints and floats
    - Each should have seperate configuration
fe 3: Allow users to build the tables using the builder pattern
    Table.columns(
        Col(
            name="firstname", # Lookup id
            label="FN", # Display name on the table
            dtype="int", # data type for rendering default configurations like alignment, ...
            align="left", # alignment (Overrides the default)
            max_w="10px" # Max width of a column
        ),
        ....
    )
    .body([

    ])
    .limit(10)
    .draw()

    technical details 

    
    fn body(raw: List[List[int | str | float] | dict[str, str] | dict[T]]) -> None
    params: The body accepts 2d array of dict objects
    example:
        Table.body(
            [
                [{"First name": "DC", "age": 20}],
                []
            ]
        ).draw()

    Drawing involves mapping data in `raw` to columns according to the col-schema.

    Questions:


    class TableBuilder:

        def draw() -> void:
            """
                terminal method
            """
            pass
        
        def body(self, body) -> TableBuilder:
            self.body = body

    1. Should we use an order-specific impl
    
        Makes building the body harder and will likely make the dx more painful, 

        a. The user should confirm that data is in the right order
            data = csv.read_file("data.csv")
            Table.body(data).draw()
        
        impl will be less complicated 
        Order specific